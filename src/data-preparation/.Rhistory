blmdata$text <- gsub(x=blmdata$text, pattern="\r\n",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "HÃÂ©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ëâ°", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â¤âËâÂ¤Â£âÅ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢â¬â¢", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="\r\n",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã°Å¸", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â¤", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "HÃÂ©", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="\r\n",replacement="", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$user_description<- gsub(x=blmdata$user_description, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "â¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Å", replacement = "", fixed = T)
# clean source attribute to useful
html_tags <- c(
"<bold>Random</bold> text with symbols: &nbsp; &lt; &gt; &amp; &quot; &apos;",
"<p>More text</p> &cent; &pound; &yen; &euro; &copy; &reg;"
)
blmdata$source_tweet<- replace_html(blmdata$source_tweet)
prepared_data[[i]] <- blmdata
write.table(blmdata, paste0('../../gen/data-preparation/temp/', extracted_filename))
}
library(data.table)
library(dplyr)
library(tidyr)
library(textclean)
# install.packages(pandas)
# library(pandas)
filenames = c('../../datasets/BLM2020_dataset.csv',
'../../datasets/BLM2021_dataset.csv')
data_blm = lapply(filenames,
function(fn) {
fread(
fn
)
})
# Loop through all of the data
dir.create('../../gen/data-preparation/temp', recursive= TRUE)
prepared_data <- list()
for (i in seq(along=data_blm)) {
print(i)
blmdata = data_blm[[i]]
fn = filenames[i]
extracted_filename = rev(strsplit(fn, '/')[[1]])[1]
# Get a first look of the data
blmdata$retweeted_tweet[is.na(blmdata$retweeted_tweet)] <- 0
blmdata$quoted_tweet[is.na(blmdata$quoted_tweet)] <- "No"
# Remove duplicates with the distinct function
sum(duplicated(blmdata))
blmdata %>% distinct(blmdata$tweet_id)
# See the type of data of the variables
glimpse(blmdata)
# Separate the date and the time into 2 variables
blmdata$date <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 1)
blmdata$time <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 2)
#see the class of the date
class(blmdata$date)
# The data is a character and needs to be converted into a date variable
blmdata$date %>% as.Date(blmdata$datetime, format = c("%Y-%m-%d"))
blmdata$date %>% as.Date(blmdata$date, format = c("%Y-%m-%d"))
# Make the Time variable readable
blmdata$time <- gsub(x=blmdata$time, pattern="+00:00",replacement="",fixed=T)
# Remove the Datetime variable and create a new dataframe
blmdata = subset(blmdata, select = -c(blmdata$datetime))
# remove weird characters (rendered) content tweet and user description
blmdata$text <- gsub(x=blmdata$text, pattern="\r\n",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "HÃÂ©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ëâ°", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â¤âËâÂ¤Â£âÅ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢â¬â¢", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="\r\n",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã°Å¸", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â¤", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "HÃÂ©", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="\r\n",replacement="", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$user_description<- gsub(x=blmdata$user_description, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "â¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Å", replacement = "", fixed = T)
# clean source attribute to useful
html_tags <- c(
"<bold>Random</bold> text with symbols: &nbsp; &lt; &gt; &amp; &quot; &apos;",
"<p>More text</p> &cent; &pound; &yen; &euro; &copy; &reg;"
)
blmdata$source_tweet<- replace_html(blmdata$source_tweet)
prepared_data[[i]] <- blmdata
write.table(blmdata, paste0('../../gen/data-preparation/temp/', extracted_filename))
}
library(data.table)
library(dplyr)
library(tidyr)
library(textclean)
# install.packages(pandas)
# library(pandas)
filenames = c('../../datasets/BLM2020_dataset.csv',
'../../datasets/BLM2021_dataset.csv')
data_blm = lapply(filenames,
function(fn) {
fread(
fn
)
})
# Loop through all of the data
dir.create('../../gen/data-preparation/temp', recursive= TRUE)
prepared_data <- list()
for (i in seq(along=data_blm)) {
print(i)
blmdata = data_blm[[i]]
fn = filenames[i]
extracted_filename = rev(strsplit(fn, '/')[[1]])[1]
# Get a first look of the data
blmdata$retweeted_tweet[is.na(blmdata$retweeted_tweet)] <- 0
blmdata$quoted_tweet[is.na(blmdata$quoted_tweet)] <- "No"
# Remove duplicates with the distinct function
sum(duplicated(blmdata))
blmdata %>% distinct(blmdata$tweet_id)
# See the type of data of the variables
glimpse(blmdata)
# Separate the date and the time into 2 variables
blmdata$date <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 1)
blmdata$time <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 2)
#see the class of the date
class(blmdata$date)
# The data is a character and needs to be converted into a date variable
blmdata$date %>% as.Date(blmdata$date, format = c("%Y-%m-%d"))
# Make the Time variable readable
blmdata$time <- gsub(x=blmdata$time, pattern="+00:00",replacement="",fixed=T)
# Remove the Datetime variable and create a new dataframe
blmdata = subset(blmdata, select = -c(blmdata$datetime))
# remove weird characters (rendered) content tweet and user description
blmdata$text <- gsub(x=blmdata$text, pattern="\r\n",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "HÃÂ©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ëâ°", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â¤âËâÂ¤Â£âÅ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢â¬â¢", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="\r\n",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã°Å¸", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â¤", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "HÃÂ©", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="\r\n",replacement="", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$user_description<- gsub(x=blmdata$user_description, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "â¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Å", replacement = "", fixed = T)
# clean source attribute to useful
html_tags <- c(
"<bold>Random</bold> text with symbols: &nbsp; &lt; &gt; &amp; &quot; &apos;",
"<p>More text</p> &cent; &pound; &yen; &euro; &copy; &reg;"
)
blmdata$source_tweet<- replace_html(blmdata$source_tweet)
prepared_data[[i]] <- blmdata
write.table(blmdata, paste0('../../gen/data-preparation/temp/', extracted_filename))
}
filenames = c('../../datasets/BLM2020_dataset.csv',
'../../datasets/BLM2021_dataset.csv')
data_blm = lapply(filenames,
function(fn) {
fread(
fn
)
})
# Loop through all of the data
dir.create('../../gen/data-preparation/temp', recursive= TRUE)
prepared_data <- list()
for (i in seq(along=data_blm)) {
print(i)
blmdata = data_blm[[i]]
fn = filenames[i]
extracted_filename = rev(strsplit(fn, '/')[[1]])[1]
# Get a first look of the data
blmdata$retweeted_tweet[is.na(blmdata$retweeted_tweet)] <- 0
blmdata$quoted_tweet[is.na(blmdata$quoted_tweet)] <- "No"
# Remove duplicates with the distinct function
sum(duplicated(blmdata))
blmdata %>% distinct(blmdata$tweet_id)
# See the type of data of the variables
glimpse(blmdata)
# Separate the date and the time into 2 variables
blmdata$date <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 1)
blmdata$time <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 2)
#see the class of the date
class(blmdata$date)
# The data is a character and needs to be converted into a date variable
blmdata$date <- as.Date(blmdata$date, format = c("%Y-%m-%d"))
# Make the Time variable readable
blmdata$time <- gsub(x=blmdata$time, pattern="+00:00",replacement="",fixed=T)
# Remove the Datetime variable and create a new dataframe
blmdata = subset(blmdata, select = -c(blmdata$datetime))
# remove weird characters (rendered) content tweet and user description
blmdata$text <- gsub(x=blmdata$text, pattern="\r\n",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "HÃÂ©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ëâ°", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â¤âËâÂ¤Â£âÅ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢â¬â¢", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="\r\n",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã°Å¸", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â¤", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "HÃÂ©", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="\r\n",replacement="", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$user_description<- gsub(x=blmdata$user_description, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "â¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Å", replacement = "", fixed = T)
# clean source attribute to useful
html_tags <- c(
"<bold>Random</bold> text with symbols: &nbsp; &lt; &gt; &amp; &quot; &apos;",
"<p>More text</p> &cent; &pound; &yen; &euro; &copy; &reg;"
)
blmdata$source_tweet<- replace_html(blmdata$source_tweet)
prepared_data[[i]] <- blmdata
write.table(blmdata, paste0('../../gen/data-preparation/temp/', extracted_filename))
}
filenames = c('../../datasets/BLM2020_dataset.csv',
'../../datasets/BLM2021_dataset.csv')
data_blm = lapply(filenames,
function(fn) {
fread(
fn
)
})
# Loop through all of the data
dir.create('../../gen/data-preparation/temp', recursive= TRUE)
prepared_data <- list()
for (i in seq(along=data_blm)) {
print(i)
blmdata = data_blm[[i]]
fn = filenames[i]
extracted_filename = rev(strsplit(fn, '/')[[1]])[1]
# Get a first look of the data
blmdata$retweeted_tweet[is.na(blmdata$retweeted_tweet)] <- 0
blmdata$quoted_tweet[is.na(blmdata$quoted_tweet)] <- "No"
# Remove duplicates with the distinct function
sum(duplicated(blmdata))
blmdata %>% distinct(blmdata$tweet_id)
# See the type of data of the variables
glimpse(blmdata)
# Separate the date and the time into 2 variables
blmdata$date <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 1)
blmdata$time <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 2)
#see the class of the date
class(blmdata$date)
# The data is a character and needs to be converted into a date variable
blmdata$date %>% as.Date(blmdata$date, format = c("%Y-%m-%d"))
# Make the Time variable readable
blmdata$time <- gsub(x=blmdata$time, pattern="+00:00",replacement="",fixed=T)
# Remove the Datetime variable and create a new dataframe
blmdata = subset(blmdata, select = -c(blmdata$datetime))
# remove weird characters (rendered) content tweet and user description
blmdata$text <- gsub(x=blmdata$text, pattern="\r\n",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "HÃÂ©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ëâ°", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â¤âËâÂ¤Â£âÅ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢â¬â¢", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="\r\n",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã°Å¸", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â¤", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "HÃÂ©", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="\r\n",replacement="", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$user_description<- gsub(x=blmdata$user_description, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "â¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Å", replacement = "", fixed = T)
# clean source attribute to useful
html_tags <- c(
"<bold>Random</bold> text with symbols: &nbsp; &lt; &gt; &amp; &quot; &apos;",
"<p>More text</p> &cent; &pound; &yen; &euro; &copy; &reg;"
)
blmdata$source_tweet<- replace_html(blmdata$source_tweet)
prepared_data[[i]] <- blmdata
write.table(blmdata, paste0('../../gen/data-preparation/temp/', extracted_filename))
}
library(data.table)
library(dplyr)
library(tidyr)
library(textclean)
# install.packages(pandas)
# library(pandas)
filenames = c('../../datasets/BLM2020_dataset.csv',
'../../datasets/BLM2021_dataset.csv')
data_blm = lapply(filenames,
function(fn) {
fread(
fn
)
})
# Loop through all of the data
dir.create('../../gen/data-preparation/temp', recursive= TRUE)
prepared_data <- list()
for (i in seq(along=data_blm)) {
print(i)
blmdata = data_blm[[i]]
fn = filenames[i]
extracted_filename = rev(strsplit(fn, '/')[[1]])[1]
# Get a first look of the data
blmdata$retweeted_tweet[is.na(blmdata$retweeted_tweet)] <- 0
blmdata$quoted_tweet[is.na(blmdata$quoted_tweet)] <- "No"
# Remove duplicates with the distinct function
sum(duplicated(blmdata))
blmdata %>% distinct(blmdata$tweet_id)
# See the type of data of the variables
glimpse(blmdata)
# Separate the date and the time into 2 variables
blmdata$date <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 1)
blmdata$time <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 2)
#see the class of the date
class(blmdata$date)
# The data is a character and needs to be converted into a date variable
blmdata$date %>% as.Date(blmdata$date, format = c("%Y-%m-%d"))
# Make the Time variable readable
blmdata$time <- gsub(x=blmdata$time, pattern="+00:00",replacement="",fixed=T)
# Remove the Datetime variable and create a new dataframe
blmdata = subset(blmdata, select = -c(blmdata$datetime))
# remove weird characters (rendered) content tweet and user description
blmdata$text <- gsub(x=blmdata$text, pattern="\r\n",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "HÃÂ©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ëâ°", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â¤âËâÂ¤Â£âÅ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢â¬â¢", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="\r\n",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã°Å¸", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â¤", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "HÃÂ©", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="\r\n",replacement="", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$user_description<- gsub(x=blmdata$user_description, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "â¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Å", replacement = "", fixed = T)
# clean source attribute to useful
html_tags <- c(
"<bold>Random</bold> text with symbols: &nbsp; &lt; &gt; &amp; &quot; &apos;",
"<p>More text</p> &cent; &pound; &yen; &euro; &copy; &reg;"
)
blmdata$source_tweet<- replace_html(blmdata$source_tweet)
prepared_data[[i]] <- blmdata
write.table(blmdata, paste0('../../gen/data-preparation/temp/', extracted_filename))
}
BLM_merged<- rbind(blm_data)
write.csv(BLM_merged, '../../gen/data-preparation/merging.csv')
View(data_blm)
View(data_blm)
library(data.table)
library(dplyr)
library(tidyr)
library(textclean)
#
filenames = c('../../datasets/BLM2020_dataset.csv',
'../../datasets/BLM2021_dataset.csv')
data_blm = lapply(filenames,
function(fn) {
fread(
fn
)
})
# Loop through all of the data
dir.create('../../gen/data-preparation/temp', recursive= TRUE)
prepared_data <- list()
for (i in seq(along=data_blm)) {
print(i)
blmdata = data_blm[[i]]
fn = filenames[i]
extracted_filename = rev(strsplit(fn, '/')[[1]])[1]
# Get a first look of the data
blmdata$retweeted_tweet[is.na(blmdata$retweeted_tweet)] <- 0
blmdata$quoted_tweet[is.na(blmdata$quoted_tweet)] <- "No"
# Remove duplicates with the distinct function
sum(duplicated(blmdata))
blmdata %>% distinct(blmdata$tweet_id)
# See the type of data of the variables
glimpse(blmdata)
# Separate the date and the time into 2 variables
blmdata$date <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 1)
blmdata$time <- sapply(strsplit(as.character(blmdata$datetime), " "), "[", 2)
#see the class of the date
class(blmdata$date)
# The data is a character and needs to be converted into a date variable
blmdata$date <- as.Date(blmdata$date, format = c("%Y-%m-%d"))
# Make the Time variable readable
blmdata$time <- gsub(x=blmdata$time, pattern="+00:00",replacement="",fixed=T)
# Remove the Datetime variable and create a new dataframe
blmdata = subset(blmdata, select = -c(datetime))
# remove weird characters (rendered) content tweet and user description
blmdata$text <- gsub(x=blmdata$text, pattern="\r\n",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "HÃÂ©", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ëâ°", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Â¤âËâÂ¤Â£âÅ ", replacement = "", fixed = T)
blmdata$text <- gsub(x=blmdata$text, pattern = "Ã¢â¬â¢", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="\r\n",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_content, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã°Å¸", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â¤", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "HÃÂ©", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Ã", replacement = "", fixed = T)
#blmdata$rendered_content <- gsub(x=blmdata$rendered_Content, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="\r\n",replacement="", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern="Ã¢â¬Â¢",replacement="", fixed = T)
blmdata$user_description<- gsub(x=blmdata$user_description, pattern= "Ã¢Ëâ¦ ", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã°Å¸Â¤", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Â©", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Ã¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "â¢", replacement = "", fixed = T)
blmdata$user_description <- gsub(x=blmdata$user_description, pattern= "Å", replacement = "", fixed = T)
# clean source attribute to useful
html_tags <- c(
"<bold>Random</bold> text with symbols: &nbsp; &lt; &gt; &amp; &quot; &apos;",
"<p>More text</p> &cent; &pound; &yen; &euro; &copy; &reg;"
)
blmdata$source_tweet<- replace_html(blmdata$source_tweet)
prepared_data[[i]] <- blmdata
write.table(blmdata, paste0('../../gen/data-preparation/temp/', extracted_filename))
}
BLM_merged<- rbind(blm_data)
write.csv(BLM_merged, '../../gen/data-preparation/merging.csv')
